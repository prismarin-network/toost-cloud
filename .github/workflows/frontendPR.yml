name: frontend

on:
  pull_request:
    branches: [ master ]
    
  workflow_dispatch:

jobs:
  Web-App:
    name: web-app
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2

      - name: check cache
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: install
        run: |
          cd web-app/
          npm install

      - name: lint
        run: |
          cd web-app/
          npm run lint
          
      - name: build
        run: |
          cd web-app/
          npm run build
          
      - name: build-storybook
        run: |
          cd web-app/
          npm run build-storybook
          
  Ionic-App:
    name: ionic-app
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: check cache
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: install
        run: |
          cd web-app/
          npm install

      - name: lint
        run: |
          cd ionic-app/
          npm run lint
          
      - name: build
        run: |
          cd ionic-app/
          npm run build       
